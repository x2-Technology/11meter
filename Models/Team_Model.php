<?php
/**
 * Created by PhpStorm.
 * User: suleymantopaloglu
 * Date: 25.09.18
 * Time: 22:17
 */
namespace _start;
use Model;
class Team_Model extends Model
{
        public function __construct()
        {
                parent::__construct();

        }

        public function __destruct()
        {
                parent::__destruct(); // TODO: Change the autogenerated stub
        }

}

namespace _teams;
use Model;
use Database;
use Config;
class Team_Model extends Model
{

        public function __destruct()
        {
                parent::__destruct(); // TODO: Change the autogenerated stub
        }



        public function connect()
        {
                // TODO: Implement connect() method.
                $this->db = new Database();
        }



        public function fetchTeams()
        {
                // TODO: Implement connect() method.
                $this->db = new Database();

                $teams = $this->pars->teams;
                $club_id = $this->pars->club_id;

                // highlight_string(var_export($teams, true));
                $extraStatement = "";
                if( count($teams) ){
                        $extraStatement = array();
                        foreach ($teams as $team){
                                array_push($extraStatement, "id=" . $team);
                        }
                        $extraStatement = implode(" OR ", $extraStatement);
                        $extraStatement = " AND ({$extraStatement})";
                }

                $sql = "
                        SELECT * FROM " . Config::DB_Name . ".mannschaft WHERE club_id={$club_id} {$extraStatement}
                ";
                $this->db =  new Database();
                $this->db->setQuery($sql);
                $data = $this->db->fetch();

                echo $this->db->getQueryString();
                return array(

                        "resulta"=> $this->db->resulta,
                        "process"=> $this->db->process,
                        "data"=> $data,
                        "errInfo"=>$this->db->errInfo,
                        "errCode"=>$this->db->errCode,
                        "sql" =>$this->db->getQueryString(),

                );
        }


        public function __construct()
        {
                parent::__construct();

        }

}

namespace _team;
use Model;
use Database;
use TEAMROLLE;
use Config;
use VAR_EXTENSION;
class Team_Model extends Model
{

        public function __destruct()
        {
                parent::__destruct(); // TODO: Change the autogenerated stub
        }



        public function connect()
        {
                // TODO: Implement connect() method.
                $this->db = new Database();
        }

        public function fetchTeam()
        {
                // TODO: Implement connect() method.
                $this->db = new Database();

                $teams = $this->pars->teams;

                $sql = "SELECT * FROM " . Config::DB_Name . ".mannschaft WHERE id={$teams}";
                $this->db = new Database();
                $this->db->setQuery($sql);
                $data = $this->db->fetch();

                return array(

                        "resulta"=> $this->db->resulta,
                        "process"=> $this->db->process,
                        "data"=> $data,
                        "errInfo"=>$this->db->errInfo,
                        "errCode"=>$this->db->errCode,
                        "sql" =>$this->db->getQueryString(),

                );
        }

        public function fetchPlayers(){

                // More than 1 team show teams list
                $team           = $this->pars->teams;
                $ct             = TEAMROLLE::COTRAINER;
                $t              = TEAMROLLE::TRAINER;
                $tt             = TEAMROLLE::TORWARTTRAINER;
                $pl             = TEAMROLLE::SPIELER;
                $thumb_ext      = VAR_EXTENSION::THUMB;
                $doc_url        = Config::CLUB_DOCS_BASE_URI;
                $this->db       = new Database();

                $sql = "SELECT 
                          *,
                          (SELECT k.final_name ) as member_final_name,
                          (SELECT CONCAT( REPLACE( k.vorname, ' ', '_' ), '_', REPLACE( k.nachname, ' ', '_' ), '_', YEAR(k.geburtsdatum))) as member_image_formatted_name,
                          (SELECT CONCAT('{$doc_url}', '/' ,club_id, '/members/', member_image_formatted_name ,'.png')) as member_image, 
                          (SELECT '/images/avatar.png') as member_image_avatar,
                          (SELECT CONCAT('{$doc_url}', '/' ,club_id, '/members/', member_image_formatted_name ,'{$thumb_ext}.png')) as member_image{$thumb_ext},
                          (SELECT ppws.mannschaft FROM playerplayed_team_with_season as ppws WHERE ppws.player_id=k.id AND ppws.season_id = k.current_season ) as final_mannschaft,
                          IF( k.teamrolle={$ct} OR k.teamrolle={$t} OR k.teamrolle={$tt}, TRUE, FALSE) as is_trainer, 
                          IF( k.teamrolle={$pl}, TRUE, FALSE) as is_player,
                          (SELECT name FROM teamrolle WHERE id=k.teamrolle) as teamrolle_name
                          FROM " . Config::DB_Name . ".kontakt as k HAVING IN_INDEXED_ARRAY(final_mannschaft,'{$team}') > 0
                          ORDER BY k.final_name ASC";

                $this->db->setQuery($sql);
                $data = $this->db->fetch();

                return array(

                        "resulta"=> $this->db->resulta,
                        "process"=> $this->db->process,
                        "data"=> $data,
                        "errInfo"=>$this->db->errInfo,
                        "errCode"=>$this->db->errCode,
                        "sql" =>$this->db->getQueryString(),

                );



        }


        public function __construct()
        {
                parent::__construct();

        }

}

