<?php /** @noinspection ALL */

/*
/**
 * Created by PhpStorm.
 * User: adler_supervisor
 * Date: 10.07.17
 * Time: 14:54
 */

class _Public extends _Public_Extends
{
        /**
         * _Public constructor.
         * @param $pars
         * @throws ReflectionException
         */
        static $weather = null;


        function __construct($pars)
        {
                try {
                        parent::__construct($pars, false);
                } catch (ReflectionException $e) {
                }
        }


        public function fetchLocalClubs(){
                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}($required_reason);
        }


        public function contentHeader($data = array())
        {

                $weather = $this->weatherIn5DayWithDateAndTime('Frankenthal', $data["fulldate"] );


                // HEADER
                $this->view->data = array(
                        "db"            => $data,
                        "weather"       => $weather
                );
                $header = $this->view->fileContent( $this->getReflectedClass()->getShortName() , "header.php");

                return $header;
        }


        public function index()
        {
                // TODO: Implement index() method.
        }


        public function __destruct()
        {
                parent::__destruct(); // TODO: Change the autogenerated stub
        }


        /**
         * @param $cityName
         * @param $datetime
         * @return mixed|null
         * Report Next in 5 Day
         */
        public function weatherIn5DayWithDateAndTime( $cityName, $datetime )
        {

                if (is_null(self::$weather)) {
                        include "Libs/Frameworks/Weather/Weather.php";
                        self::$weather = new Weather();
                }
                self::$weather->setLang("de");
                self::$weather->setUnits("metric");

                return self::$weather->getForecastDataIn5DayWithDateAndTime($cityName, $datetime);
        }

        public function weatherNow( $city ){

                if( is_null(self::$weather) ){
                        include "Libs/Frameworks/Weather/Weather.php";
                        self::$weather = new Weather();
                }

                self::$weather->setLang("de");
                self::$weather->setUnits("metric");
                $data = self::$weather->getWeather( $city );

                return $data;


        }


        // Get  Reasons
        function getReasons($required_reason = NULL){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}($required_reason);

        }

        // Get  Reasons
        function getSeasons(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();

        }


        // Get  DFB Clubs
        function getDFBClubs(){

                
                $this->model->pars = $this->pars;
                $data = $this->model->{__FUNCTION__}();

                #highlight_string(var_export($this->pars, true));
                if( !is_null($this->pars->id) ){
                        if(!is_null($data)){
                                return array_shift($data );
                        }
                }

                return $data;
        }

        // Get  DFB Clubs
        function getDFBLeagueGroups(){


                $this->model->pars = $this->pars;
                $data = $this->model->{__FUNCTION__}();

                #highlight_string(var_export($this->pars, true));
                if( !is_null($this->pars->id) ){
                        if(!is_null($data)){
                                return array_shift($data );
                        }
                }

                return $data;
        }



        // Get  Time Suggestions Club Teams
        function fetchTimeSuggestions(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Fetch  Place covering, Saha kaplamasi
        function fetchPlaceCovering(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }


        // Get  DFB Club Teams
        function getDFBClubTeams(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Get Teams that Trainer created
        function fetchTrainerTeams(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Get  DFB Club Sub Teams
        function getDFBClubSubTeams(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Get  DFB Club Sub Teams
        function getDFBTeamGroups(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Get  All Licences other name is _code
        function getLicences(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }

        // Get  All Leagues () other name is Spielklasse
        function fetchLeagues(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }


        // Get  All Leagues () other name is Spielklasse
        function fetchPostCodes(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }


        // Get Teamrolle
        /**
         * @deprecated
         * @uses getRoles
         * */
        function getTeamrolle(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();

        }

        /**
         * @insted of getTeamrolle
        */
        function getRoles(){

                $this->model->pars = $this->pars;
                $data = $this->model->{__FUNCTION__}();
                return $data;
        }


        // Get  Trainer Licence
        function getTrainerLicence(){

                $this->model->pars = $this->pars;
                return $this->model->{__FUNCTION__}();
        }


        function getMenu()
        {
                return parent::getMenu(); // TODO: Change the autogenerated stub
        }


        function reportErrorToDeveloper(){


                // highlight_string(var_export($this->pars, true));
                $email = new Email();

                $email->send("11meter.app", "s.topaloglu@adler-gruppe.com", "Error", $this->pars->message );

                return array(
                        "message"=>"Sent"
                );


        }


        function getDynamicMenu_()
        {
                // TODO: Implement getDynamicMenu() method.

                $this->model->pars = $this->pars;
                $menus = $this->model->{__FUNCTION__}();

                if ($this->pars->data_fetch == DATA_FETCH::ASSOC) {

                        return array(
                                "slide_menu" => $this->prepareMenuItem(
                                        $menus, X2_USER_MENU::X2UserMenuMenuSlide
                                ),
                                "bottom_menu" => $this->prepareMenuItem(
                                        $menus, X2_USER_MENU::X2UserMenuMenuBottom
                                )
                        );
                }

                return array(
                        "slide_menu" => array(),
                        "bottom_menu" => array()
                );




        }

        function sessionUser()
        {
                #highlight_string(var_export( REPOSITORY::read(REPOSITORY::CURRENT_USER), true));
                
                return count(REPOSITORY::read(REPOSITORY::CURRENT_USER));
                // TODO: Implement sessionUser() method.
        }

        function runnableScript()
        {
                // TODO: Implement runnableScript() method.
                include "Libs/WebServices/WebServices.php";
                $service = new WebServices($this->pars->fileName);
                return $service->getServiceExternalAttack();

        }

        function runnableAction()
        {
                // TODO: Implement runnableScript() method.
                include "Libs/WebServices/WebServices.php";
                $service = new WebServices($this->pars->fileName);
                return $service->getServiceExternalAdaptation();

        }



        function testZipCode(){

                $postcode = $this->pars->postcode;
                $distance = $this->pars->distance;

                if( !isset($postcode) ){
                        die("Bitte Geben PLZ ein");
                }

                if( !isset($distance) ){
                        die("Bitte Geben Umgebung ein");
                }
                

                $ZC = \Zip_Codes::getInstance();

                $result = $ZC->getEnvironmentAreasWithPostCode(array($postcode),$distance);
                
                highlight_string(var_export($result->array, true));;

        }
}



